{"ast":null,"code":"var _jsxFileName = \"/Users/beckdaansuren/dev/burgir/src/pages/BurgerPage/index.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger\";\nimport BuildControls from \"../../components/BuildControls\";\nimport Modal from \"../../components/General/Modal\";\nimport OrderSummary from \"../../components/OrderSummary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INGREDIENTS_PRICE = {\n  salad: 100,\n  chesse: 150,\n  bacon: 230,\n  meat: 300\n};\nconst INGREDIENTS_NAMES = {\n  salad: \"Salad\",\n  chesse: \"Cheese\",\n  bacon: \"Bacon\",\n  meat: \"Meat\"\n}; // const controls = {\n//   salad: \"Salad\",\n//   bacon: \"Bacon\",\n//   chesse: \"Chesse\",\n//   meat: \"Meat\",\n// };\n\nclass BurgerPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        chesse: 0,\n        bacon: 0,\n        meat: 0\n      },\n      totalPrice: 100,\n      purchasing: false,\n      confirmOrder: false\n    };\n\n    this.showConfirmModal = () => {\n      console.log(showConfirmModal);\n      this.setState({\n        confirmOrder: true\n      });\n    };\n\n    this.closeConfirmModal = () => {\n      this.setState({\n        confirmOrder: false\n      });\n    };\n\n    this.ortsNemeh = type => {\n      const newIngredients = { ...this.state.ingredients\n      };\n      newIngredients[type]++;\n      const newPrice = this.state.totalPrice + INGREDIENTS_PRICE[type];\n      this.setState({\n        purchasing: true,\n        totalPrice: newPrice,\n        ingredients: newIngredients\n      });\n    };\n\n    this.ortsHasah = type => {\n      if (this.state.ingredients[type] > 0) {\n        const newIngredients = { ...this.state.ingredients\n        };\n        newIngredients[type]--;\n        const newPrice = this.state.totalPrice - INGREDIENTS_PRICE[type];\n        this.setState({\n          purchasing: newPrice > 100,\n          totalPrice: newPrice,\n          ingredients: newIngredients\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.ConfirmModal,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients,\n          ingredientsNames: INGREDIENTS_NAMES\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        showConfirmModal: this.showConfirmModal,\n        ingredientsNames: INGREDIENTS_NAMES,\n        disabled: !this.state.purchasing,\n        ortsHasah: this.ortsHasah,\n        ortsNemeh: this.ortsNemeh,\n        price: this.state.totalPrice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BurgerPage;","map":{"version":3,"sources":["/Users/beckdaansuren/dev/burgir/src/pages/BurgerPage/index.js"],"names":["React","Component","Burger","BuildControls","Modal","OrderSummary","INGREDIENTS_PRICE","salad","chesse","bacon","meat","INGREDIENTS_NAMES","BurgerPage","state","ingredients","totalPrice","purchasing","confirmOrder","showConfirmModal","console","log","setState","closeConfirmModal","ortsNemeh","type","newIngredients","newPrice","ortsHasah","render","ConfirmModal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Burger from \"../../components/Burger\";\nimport BuildControls from \"../../components/BuildControls\";\nimport Modal from \"../../components/General/Modal\";\nimport OrderSummary from \"../../components/OrderSummary\";\n\nconst INGREDIENTS_PRICE = { salad: 100, chesse: 150, bacon: 230, meat: 300 };\nconst INGREDIENTS_NAMES = {\n  salad: \"Salad\",\n  chesse: \"Cheese\",\n  bacon: \"Bacon\",\n  meat: \"Meat\",\n};\n\n// const controls = {\n//   salad: \"Salad\",\n//   bacon: \"Bacon\",\n//   chesse: \"Chesse\",\n//   meat: \"Meat\",\n// };\n\nclass BurgerPage extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      chesse: 0,\n      bacon: 0,\n      meat: 0,\n    },\n\n    totalPrice: 100,\n    purchasing: false,\n    confirmOrder: false,\n  };\n\n  showConfirmModal = () => {\n    console.log(showConfirmModal);\n    this.setState({ confirmOrder: true });\n  };\n\n  closeConfirmModal = () => {\n    this.setState({ confirmOrder: false });\n  };\n\n  ortsNemeh = (type) => {\n    const newIngredients = { ...this.state.ingredients };\n    newIngredients[type]++;\n\n    const newPrice = this.state.totalPrice + INGREDIENTS_PRICE[type];\n\n    this.setState({\n      purchasing: true,\n      totalPrice: newPrice,\n      ingredients: newIngredients,\n    });\n  };\n\n  ortsHasah = (type) => {\n    if (this.state.ingredients[type] > 0) {\n      const newIngredients = { ...this.state.ingredients };\n      newIngredients[type]--;\n      const newPrice = this.state.totalPrice - INGREDIENTS_PRICE[type];\n      this.setState({\n        purchasing: newPrice > 100,\n        totalPrice: newPrice,\n        ingredients: newIngredients,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Modal show={this.state.ConfirmModal}>\n          <OrderSummary\n            ingredients={this.state.ingredients}\n            ingredientsNames={INGREDIENTS_NAMES}\n          />\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          showConfirmModal={this.showConfirmModal}\n          ingredientsNames={INGREDIENTS_NAMES}\n          disabled={!this.state.purchasing}\n          ortsHasah={this.ortsHasah}\n          ortsNemeh={this.ortsNemeh}\n          price={this.state.totalPrice}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BurgerPage;\n"]},"metadata":{},"sourceType":"module"}